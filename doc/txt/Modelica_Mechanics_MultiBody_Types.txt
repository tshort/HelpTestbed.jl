Modelica.Mechanics.MultiBody.Types: Modelica.Mechanics.MultiBody.Types



Constants and types with choices, especially to build menus

Information
===========

::

In this package types and constants are defined that are used in the
MultiBody library. The types have additional annotation choices
definitions that define the menus to be built up in the graphical user
interface when the type is used as parameter in a declaration.

::

Extends from Modelica.Icons.Package (Icon for standard packages).

Package Content
===============

  ------------------------------------------------------------------------
  Name                                        Description
  ------------------------------------------- ----------------------------
  [image9] Axis                               Axis vector with choices for
                                              menus

  [image10] AxisLabel                         Label of axis with choices
                                              for menus

  [image11] RotationSequence                  Sequence of planar frame
                                              rotations with choices for
                                              menus

  [image12] Color                             RGB representation of color
                                              (will be improved with a
                                              color editor)

  [image13] RealColor                         RGB representation of color
                                              as Real type

  [image14] SpecularCoefficient               Reflection of ambient light
                                              (= 0: light is completely
                                              absorbed)

  [image15] ShapeType                         Type of shape (box, sphere,
                                              cylinder, pipecylinder,
                                              cone, pipe, beam, gearwheel,
                                              spring, dxf-file)

  [image16] ShapeExtra                        Reflection of ambient light
                                              (= 0: light is completely
                                              absorbed)

  ResolveInFrameA                             Enumeration to define the
                                              frame in which an absolute
                                              vector is resolved (world,
                                              frame_a, frame_resolve)

  ResolveInFrameB                             Enumeration to define the
                                              frame in which an absolute
                                              vector is resolved (world,
                                              frame_b, frame_resolve)

  ResolveInFrameAB                            Enumeration to define the
                                              frame in which a relative
                                              vector is resolved (world,
                                              frame_a, frame_b,
                                              frame_resolve)

  RotationTypes                               Enumeration defining in
                                              which way the fixed
                                              orientation of frame_b with
                                              respect to frame_a is
                                              specified

  GravityTypes                                Enumeration defining the
                                              type of the gravity field

  Init                                        

  [image17] Defaults                          Default settings of the
                                              MultiBody library via
                                              constants
  ------------------------------------------------------------------------

Types and constants
===================

    type Axis = Modelica.Icons.TypeReal[3](each final unit="1") 
    "Axis vector with choices for menus";

    type AxisLabel = Modelica.Icons.TypeString 
    "Label of axis with choices for menus";

    type RotationSequence = Modelica.Icons.TypeInteger[3] (min={1,1,1}, max={3,3,3}) 
    "Sequence of planar frame rotations with choices for menus";

    type Color = Modelica.Icons.TypeInteger[3] (each min=0, each max=255) 
    "RGB representation of color (will be improved with a color editor)";

    type RealColor =
                 Modelica.Icons.TypeReal[3] (each min=0, each max=255) 
    "RGB representation of color as Real type ";

    type SpecularCoefficient = Modelica.Icons.TypeReal 
    "Reflection of ambient light (= 0: light is completely absorbed)";

    type ShapeType = Modelica.Icons.TypeString 
    "Type of shape (box, sphere, cylinder, pipecylinder, cone, pipe, beam, gearwheel, spring, dxf-file)";

    type ShapeExtra = Modelica.Icons.TypeReal 
    "Reflection of ambient light (= 0: light is completely absorbed)";

    type ResolveInFrameA = enumeration(
      world "Resolve in world frame",
      frame_a "Resolve in frame_a",
      frame_resolve "Resolve in frame_resolve (frame_resolve must be connected)")
    "Enumeration to define the frame in which an absolute vector is resolved (world, frame_a, frame_resolve)";

    type ResolveInFrameB = enumeration(
      world "Resolve in world frame",
      frame_b "Resolve in frame_b",
      frame_resolve "Resolve in frame_resolve (frame_resolve must be connected)")
    "Enumeration to define the frame in which an absolute vector is resolved (world, frame_b, frame_resolve)";

    type ResolveInFrameAB = enumeration(
      world "Resolve in world frame",
      frame_a "Resolve in frame_a",
      frame_b "Resolve in frame_b",
      frame_resolve "Resolve in frame_resolve (frame_resolve must be connected)")
    "Enumeration to define the frame in which a relative vector is resolved (world, frame_a, frame_b, frame_resolve)";

    type RotationTypes = enumeration(
      RotationAxis "Rotating frame_a around an angle with a fixed axis",
      TwoAxesVectors "Resolve two vectors of frame_b in frame_a",
      PlanarRotationSequence "Planar rotation sequence") 
    "Enumeration defining in which way the fixed orientation of frame_b with respect to frame_a is specified";

    type GravityTypes = enumeration(
      NoGravity "No gravity field",
      UniformGravity "Uniform gravity field",
      PointGravity "Point gravity field") 
    "Enumeration defining the type of the gravity field";

    type Init = enumeration(
        Free,
        PositionVelocity,
        SteadyState,
        Position,
        Velocity,
        VelocityAcceleration,
        PositionVelocityAcceleration);

* * * * *

Automatically generated Fri Nov 12 16:30:40 2010.
