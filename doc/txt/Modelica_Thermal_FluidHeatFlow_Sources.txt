Modelica.Thermal.FluidHeatFlow.Sources



Modelica.Thermal.FluidHeatFlow.Sources
======================================

Ideal fluid sources, e.g., ambient, volume flow

Information
-----------

::

This package contains different types of sources:

-   Ambient with constant or prescribed pressure and temperature
-   AbsolutePressure to define pressure level of a closed cooling cycle.
-   Constant and prescribed volume flow
-   Constant and prescribed pressure increase
-   Simple pump with mechanical flange

Thermodynamic equations are defined in partial models (package
Interfaces.Partials). All fans / pumps are considered without losses,
they do not change enthalpy flow.

Main Authors:
    Anton Haumer
        Technical Consulting & Electrical Engineering A-3423
        St.Andrae-Woerdern, Austria email: a.haumer@haumer.at

    Dr. Christian Kral
        Austrian Institute of Technology, AIT Giefinggasse 2 A-1210
        Vienna, Austria

Copyright Â© 1998-2010, Modelica Association, Anton Haumer and Austrian
Institute of Technology, AIT.

This Modelica package is free software and the use is completely at your
own risk; it can be redistributed and/or modified under the terms of the
Modelica License 2. For license conditions (including the disclaimer of
warranty) see Modelica.UsersGuide.ModelicaLicense2 or visit
http://www.modelica.org/licenses/ModelicaLicense2.

::

Extends from Modelica.Icons.SourcesPackage (Icon for packages containing
sources).

Package Content
---------------

  ------------------------------------------------------------------------
  Name                                                        Description
  ----------------------------------------------------------- ------------
  [image5] Ambient                                            Ambient with
                                                              constant
                                                              properties

  [image6] AbsolutePressure                                   Defines
                                                              absolute
                                                              pressure
                                                              level

  [image7] VolumeFlow                                         Enforces
                                                              constant
                                                              volume flow

  [image8] PressureIncrease                                   Enforces
                                                              constant
                                                              pressure
                                                              increase

  [image9] IdealPump                                          Model of an
                                                              ideal pump
  ------------------------------------------------------------------------

* * * * *

[image10] Modelica.Thermal.FluidHeatFlow.Sources.Ambient
========================================================

Ambient with constant properties

Information
-----------

::

(Infinite) ambient with constant pressure and temperature.
    Thermodynamic equations are defined by Partials.Ambient.

::

Extends from Interfaces.Partials.Ambient (Partial model of ambient).

Parameters
----------

  ------------------------------------------------------------------------
  Type                                Name       Default     Description
  ----------------------------------- ---------- ----------- -------------
  Medium                              medium     FluidHeatFl Ambient
                                                 ow.Media.Me medium
                                                 dium()      

  Boolean                             usePressur false       Enable /
                                      eInput                 disable
                                                             pressure
                                                             input

  Pressure                            constantAm             Ambient
                                      bientPress             pressure [Pa]
                                      ure                    

  Boolean                             useTempera false       Enable /
                                      tureInput              disable
                                                             temperature
                                                             input

  Temperature                         constantAm             Ambient
                                      bientTempe             temperature
                                      rature                 [K]
  ------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                   Name       Descrip
                                                                    tion
  ------------------------------------------------------ ---------- -------
  FlowPort_a                                             flowPort   

  input RealInput                                        ambientPre 
                                                         ssure      

  input RealInput                                        ambientTem 
                                                         perature   
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model Ambient "Ambient with constant properties"

      extends Interfaces.Partials.Ambient;
      parameter Boolean usePressureInput=false "Enable / disable pressure input";
      parameter Modelica.SIunits.Pressure constantAmbientPressure(start=0) 
        "Ambient pressure";
      parameter Boolean useTemperatureInput=false 
        "Enable / disable temperature input";
      parameter Modelica.SIunits.Temperature constantAmbientTemperature(start=293.15, displayUnit="degC") 
        "Ambient temperature";
      Modelica.Blocks.Interfaces.RealInput ambientPressure=pAmbient if usePressureInput;
      Modelica.Blocks.Interfaces.RealInput ambientTemperature=TAmbient if useTemperatureInput;
    protected 
      Modelica.SIunits.Pressure pAmbient;
      Modelica.SIunits.Temperature TAmbient;
    equation 
      if not usePressureInput then
        pAmbient = constantAmbientPressure;
      end if;
      if not useTemperatureInput then
        TAmbient = constantAmbientTemperature;
      end if;
      flowPort.p = pAmbient;
      T = TAmbient;
    end Ambient;

* * * * *

[image11] Modelica.Thermal.FluidHeatFlow.Sources.AbsolutePressure
=================================================================

Defines absolute pressure level

Information
-----------

::

AbsolutePressure to define pressure level of a closed cooling cycle.
Coolant's mass flow, temperature and enthalpy flow are not affected.

::

Parameters
----------

  ------------------------------------------------------------------------
  Type                                       Name Default       Descriptio
                                                                n
  ------------------------------------------ ---- ------------- ----------
  Medium                                     medi FluidHeatFlow medium
                                             um   .Media.Medium 
                                                  ()            

  Pressure                                   p                  Pressure
                                                                ground
                                                                [Pa]
  ------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                       Name   Descrip
                                                                    tion
  ---------------------------------------------------------- ------ -------
  FlowPort_a                                                 flowPo 
                                                             rt     
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model AbsolutePressure "Defines absolute pressure level"

      parameter FluidHeatFlow.Media.Medium medium=FluidHeatFlow.Media.Medium() 
        "medium";
      parameter Modelica.SIunits.Pressure p(start=0) "Pressure ground";
      Interfaces.FlowPort_a flowPort(final medium=medium);
    equation 
      // defining pressure
      flowPort.p = p;
      // no energy exchange; no mass flow by default
      flowPort.H_flow = 0;
    end AbsolutePressure;

* * * * *

[image12] Modelica.Thermal.FluidHeatFlow.Sources.VolumeFlow
===========================================================

Enforces constant volume flow

Information
-----------

::

Fan resp. pump with constant volume flow rate. Pressure increase is the
response of the whole system. Coolant's temperature and enthalpy flow
are not affected. Setting parameter m (mass of medium within fan/pump)
to zero leads to neglection of temperature transient cv*m*der(T).
Thermodynamic equations are defined by Partials.TwoPort.

::

Extends from Interfaces.Partials.TwoPort (Partial model of two port).

Parameters
----------

  -------------------------------------------------------------------------
  Type                            Name    Default    Description
  ------------------------------- ------- ---------- ----------------------
  Medium                          medium  FluidHeatF Medium in the
                                          low.Media. component
                                          Medium()   

  Mass                            m                  Mass of medium [kg]

  Temperature                     T0                 Initial temperature of
                                                     medium [K]

  Real                            tapT    1          Defines temperature of
                                                     heatPort between inlet
                                                     and outlet temperature

  Boolean                         useVolu false      Enable / disable
                                  meFlowI            volume flow input
                                  nput               

  VolumeFlowRate                  constan            Volume flow rate
                                  tVolume            [m3/s]
                                  Flow               
  -------------------------------------------------------------------------

Connectors
----------

  ------------------------------------------------------------------------
  Type                                                     Name    Descrip
                                                                   tion
  -------------------------------------------------------- ------- -------
  FlowPort_a                                               flowPor 
                                                           t_a     

  FlowPort_b                                               flowPor 
                                                           t_b     

  input RealInput                                          volumeF 
                                                           low     
  ------------------------------------------------------------------------

Modelica definition
-------------------

    model VolumeFlow "Enforces constant volume flow"

      extends Interfaces.Partials.TwoPort(final tapT=1);
      parameter Boolean useVolumeFlowInput=false 
        "Enable / disable volume flow input";
      parameter Modelica.SIunits.VolumeFlowRate constantVolumeFlow(start=1) 
        "Volume flow rate";
      Modelica.Blocks.Interfaces.RealInput volumeFlow=internalVolumeFlow if useVolumeFlowInput;
    protected 
      Modelica.SIunits.VolumeFlowRate internalVolumeFlow;
    equation 
      if not useVolumeFlowInput then
        internalVolumeFlow = constantVolumeFlow;
      end if;
      Q_flow = 0;
      V_flow = internalVolumeFlow;
    end VolumeFlow;

* * * * *

[image13] Modelica.Thermal.FluidHeatFlow.Sources.PressureIncrease
=================================================================

Enforces constant pressure increase

Information
-----------

::

Fan resp. pump with constant pressure increase. Mass resp. volume flow
is the response of the whole system. Coolant's temperature and enthalpy
flow are not affected. Setting parameter m (mass of medium within
fan/pump) to zero leads to neglection of temperature transient
cv*m*der(T). Thermodynamic equations are defined by Partials.TwoPort.

::

Extends from Interfaces.Partials.TwoPort (Partial model of two port).

Parameters
----------

  -------------------------------------------------------------------------
  Type                           Name     Default    Description
  ------------------------------ -------- ---------- ----------------------
  Medium                         medium   FluidHeatF Medium in the
                                          low.Media. component
                                          Medium()   

  Mass                           m                   Mass of medium [kg]

  Temperature                    T0                  Initial temperature of
                                                     medium [K]

  Real                           tapT     1          Defines temperature of
                                                     heatPort between inlet
                                                     and outlet temperature

  Boolean                        usePress false      Enable / disable
                                 ureIncre            pressure increase
                                 aseInput            input

  Pressure                       constant            Pressure increase [Pa]
                                 Pressure            
                                 Increase            
  -------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                    Name      Descrip
                                                                    tion
  ------------------------------------------------------- --------- -------
  FlowPort_a                                              flowPort_ 
                                                          a         

  FlowPort_b                                              flowPort_ 
                                                          b         

  input RealInput                                         pressureI 
                                                          ncrease   
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model PressureIncrease "Enforces constant pressure increase"

      extends Interfaces.Partials.TwoPort(final tapT=1);
      parameter Boolean usePressureIncreaseInput=false 
        "Enable / disable pressure increase input";
      parameter Modelica.SIunits.Pressure constantPressureIncrease(start=1) 
        "Pressure increase";
      Modelica.Blocks.Interfaces.RealInput pressureIncrease=internalPressureIncrease if usePressureIncreaseInput;
    protected 
      Modelica.SIunits.Pressure internalPressureIncrease;
    equation 
      if not usePressureIncreaseInput then
        internalPressureIncrease = constantPressureIncrease;
      end if;
      Q_flow = 0;
      dp = -internalPressureIncrease;
    end PressureIncrease;

* * * * *

[image14] Modelica.Thermal.FluidHeatFlow.Sources.IdealPump
==========================================================

Model of an ideal pump

Information
-----------

::

Simple fan resp. pump where characteristic is dependent on shaft's
speed, torque * speed = pressure increase * volume flow (without losses)
Pressure increase versus volume flow is defined by a linear function,
from dp0(V_flow=0) to V_flow0(dp=0). The axis intersections vary with
speed as follows:

-   dp prop. speed^2
-   V_flow prop. speed

Coolant's temperature and enthalpy flow are not affected.
    Setting parameter m (mass of medium within fan/pump) to zero leads
    to

neglection of temperature transient cv*m*der(T).
    Thermodynamic equations are defined by Partials.TwoPort.

::

Extends from Interfaces.Partials.TwoPort (Partial model of two port).

Parameters
----------

  -------------------------------------------------------------------------
  Type                              Name Default    Description
  --------------------------------- ---- ---------- -----------------------
  Medium                            medi FluidHeatF Medium in the component
                                    um   low.Media. 
                                         Medium()   

  Mass                              m               Mass of medium [kg]

  Temperature                       T0              Initial temperature of
                                                    medium [K]

  Real                              tapT 1          Defines temperature of
                                                    heatPort between inlet
                                                    and outlet temperature

  Pump characteristic                               

  AngularVelocity                   wNom            Nominal speed [rad/s]
                                    inal            

  Pressure                          dp0             Max. pressure increase
                                                    @ V_flow=0 [Pa]

  VolumeFlowRate                    V_fl            Max. volume flow rate @
                                    ow0             dp=0 [m3/s]
  -------------------------------------------------------------------------

Connectors
----------

  ------------------------------------------------------------------------
  Type                                                     Name    Descrip
                                                                   tion
  -------------------------------------------------------- ------- -------
  FlowPort_a                                               flowPor 
                                                           t_a     

  FlowPort_b                                               flowPor 
                                                           t_b     

  Flange_a                                                 flange_ 
                                                           a       
  ------------------------------------------------------------------------

Modelica definition
-------------------

    model IdealPump "Model of an ideal pump"

      extends Interfaces.Partials.TwoPort(final tapT=1);
      parameter Modelica.SIunits.AngularVelocity wNominal(start=1, displayUnit="1/min") 
        "Nominal speed";
      parameter Modelica.SIunits.Pressure dp0(start=2) 
        "Max. pressure increase @ V_flow=0";
      parameter Modelica.SIunits.VolumeFlowRate V_flow0(start=2) 
        "Max. volume flow rate @ dp=0";
      Modelica.SIunits.AngularVelocity w=der(flange_a.phi) "Speed";
    protected 
      Modelica.SIunits.Pressure dp1;
      Modelica.SIunits.VolumeFlowRate V_flow1;
    public 
      Modelica.Mechanics.Rotational.Interfaces.Flange_a flange_a;
    equation 
      // pump characteristic
      dp1 = dp0*sign(w/wNominal)*(w/wNominal)^2;
      V_flow1 = V_flow0*(w/wNominal);
      if noEvent(abs(w)<Modelica.Constants.small) then
        dp = 0;
        flange_a.tau = 0;
      else
        dp = -dp1*(1-noEvent(abs(V_flow/V_flow1)));
        flange_a.tau*w = -dp*V_flow;
      end if;
      // no energy exchange with medium
      Q_flow = 0;
    end IdealPump;

* * * * *

Automatically generated Fri Nov 12 16:31:44 2010.
