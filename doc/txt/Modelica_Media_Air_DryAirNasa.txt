Modelica.Media.Air.DryAirNasa



Modelica.Media.Air.DryAirNasa
=============================

Air: Detailed dry air model as ideal gas (200..6000 K)

Information
-----------

::

::

Extends from IdealGases.Common.SingleGasNasa (Medium model of an ideal
gas based on NASA source).

Package Content
---------------

Name

Description

[Modelica.Media.Air.DryAirNasa.dynamicViscosity] dynamicViscosity

Simple polynomial for dry air (moisture influence small), valid from
73.15 K to 373.15 K

[Modelica.Media.Air.DryAirNasa.thermalConductivity] thermalConductivity

Simple polynomial for dry air (moisture influence small), valid from
73.15 K to 373.15 K

Inherited

[Modelica.Media.IdealGases.Common.SingleGasNasa.ThermodynamicState]
ThermodynamicState

thermodynamic state variables for ideal gases

[Modelica.Media.IdealGases.Common.SingleGasNasa.FluidConstants]
FluidConstants

Extended fluid constants

excludeEnthalpyOfFormation=true

If true, enthalpy of formation Hf is not included in specific enthalpy h

referenceChoice=Choices.ReferenceEnthalpy.ZeroAt0K

Choice of reference enthalpy

h_offset=0.0

User defined offset for reference enthalpy, if referenceChoice =
UserDefined

data

Data record of ideal gas substance

fluidConstants

constant data for the fluid

[Modelica.Media.IdealGases.Common.SingleGasNasa.BaseProperties]
BaseProperties

Base properties of ideal gas medium

[Modelica.Media.IdealGases.Common.SingleGasNasa.setState_pTX]
setState_pTX

Return thermodynamic state as function of p, T and composition X

[Modelica.Media.IdealGases.Common.SingleGasNasa.setState_phX]
setState_phX

Return thermodynamic state as function of p, h and composition X

[Modelica.Media.IdealGases.Common.SingleGasNasa.setState_psX]
setState_psX

Return thermodynamic state as function of p, s and composition X

[Modelica.Media.IdealGases.Common.SingleGasNasa.setState_dTX]
setState_dTX

Return thermodynamic state as function of d, T and composition X

[Modelica.Media.IdealGases.Common.SingleGasNasa.setSmoothState]
setSmoothState

Return thermodynamic state so that it smoothly approximates: if x > 0
then state_a else state_b

[Modelica.Media.IdealGases.Common.SingleGasNasa.pressure] pressure

return pressure of ideal gas

[Modelica.Media.IdealGases.Common.SingleGasNasa.temperature] temperature

return temperature of ideal gas

[Modelica.Media.IdealGases.Common.SingleGasNasa.density] density

return density of ideal gas

[Modelica.Media.IdealGases.Common.SingleGasNasa.specificEnthalpy]
specificEnthalpy

Return specific enthalpy

[Modelica.Media.IdealGases.Common.SingleGasNasa.specificInternalEnergy]
specificInternalEnergy

Return specific internal energy

[Modelica.Media.IdealGases.Common.SingleGasNasa.specificEntropy]
specificEntropy

Return specific entropy

[Modelica.Media.IdealGases.Common.SingleGasNasa.specificGibbsEnergy]
specificGibbsEnergy

Return specific Gibbs energy

[Modelica.Media.IdealGases.Common.SingleGasNasa.specificHelmholtzEnergy]
specificHelmholtzEnergy

Return specific Helmholtz energy

[Modelica.Media.IdealGases.Common.SingleGasNasa.specificHeatCapacityCp]
specificHeatCapacityCp

Return specific heat capacity at constant pressure

[Modelica.Media.IdealGases.Common.SingleGasNasa.specificHeatCapacityCv]
specificHeatCapacityCv

Compute specific heat capacity at constant volume from temperature and
gas data

[Modelica.Media.IdealGases.Common.SingleGasNasa.isentropicExponent]
isentropicExponent

Return isentropic exponent

[Modelica.Media.IdealGases.Common.SingleGasNasa.velocityOfSound]
velocityOfSound

Return velocity of sound

[Modelica.Media.IdealGases.Common.SingleGasNasa.isentropicEnthalpyApproximation]
isentropicEnthalpyApproximation

approximate method of calculating h_is from upstream properties and
downstream pressure

[Modelica.Media.IdealGases.Common.SingleGasNasa.isentropicEnthalpy]
isentropicEnthalpy

Return isentropic enthalpy

[Modelica.Media.IdealGases.Common.SingleGasNasa.isobaricExpansionCoefficient]
isobaricExpansionCoefficient

Returns overall the isobaric expansion coefficient beta

[Modelica.Media.IdealGases.Common.SingleGasNasa.isothermalCompressibility]
isothermalCompressibility

Returns overall the isothermal compressibility factor

[Modelica.Media.IdealGases.Common.SingleGasNasa.density_derp_T]
density_derp_T

Returns the partial derivative of density with respect to pressure at
constant temperature

[Modelica.Media.IdealGases.Common.SingleGasNasa.density_derT_p]
density_derT_p

Returns the partial derivative of density with respect to temperature at
constant pressure

[Modelica.Media.IdealGases.Common.SingleGasNasa.density_derX]
density_derX

Returns the partial derivative of density with respect to mass fractions
at constant pressure and temperature

[Modelica.Media.IdealGases.Common.SingleGasNasa.cp_T] cp_T

Compute specific heat capacity at constant pressure from temperature and
gas data

[Modelica.Media.IdealGases.Common.SingleGasNasa.cp_Tlow] cp_Tlow

Compute specific heat capacity at constant pressure, low T region

[Modelica.Media.IdealGases.Common.SingleGasNasa.cp_Tlow_der] cp_Tlow_der

Compute specific heat capacity at constant pressure, low T region

[Modelica.Media.IdealGases.Common.SingleGasNasa.h_T] h_T

Compute specific enthalpy from temperature and gas data; reference is
decided by the refChoice input, or by the referenceChoice package
constant by default

[Modelica.Media.IdealGases.Common.SingleGasNasa.h_T_der] h_T_der

derivative function for h_T

[Modelica.Media.IdealGases.Common.SingleGasNasa.h_Tlow] h_Tlow

Compute specific enthalpy, low T region; reference is decided by the
refChoice input, or by the referenceChoice package constant by default

[Modelica.Media.IdealGases.Common.SingleGasNasa.h_Tlow_der] h_Tlow_der

Compute specific enthalpy, low T region; reference is decided by the
refChoice input, or by the referenceChoice package constant by default

[Modelica.Media.IdealGases.Common.SingleGasNasa.s0_T] s0_T

Compute specific entropy from temperature and gas data

[Modelica.Media.IdealGases.Common.SingleGasNasa.s0_Tlow] s0_Tlow

Compute specific entropy, low T region

[Modelica.Media.IdealGases.Common.SingleGasNasa.dynamicViscosityLowPressure]
dynamicViscosityLowPressure

Dynamic viscosity of low pressure gases

[Modelica.Media.IdealGases.Common.SingleGasNasa.thermalConductivityEstimate]
thermalConductivityEstimate

Thermal conductivity of polyatomic gases(Eucken and Modified Eucken
correlation)

[Modelica.Media.IdealGases.Common.SingleGasNasa.molarMass] molarMass

return the molar mass of the medium

[Modelica.Media.IdealGases.Common.SingleGasNasa.T_h] T_h

Compute temperature from specific enthalpy

[Modelica.Media.IdealGases.Common.SingleGasNasa.T_ps] T_ps

Compute temperature from pressure and specific entropy

[Modelica.Media.Interfaces.PartialPureSubstance.setState_pT] setState_pT

Return thermodynamic state from p and T

[Modelica.Media.Interfaces.PartialPureSubstance.setState_ph] setState_ph

Return thermodynamic state from p and h

[Modelica.Media.Interfaces.PartialPureSubstance.setState_ps] setState_ps

Return thermodynamic state from p and s

[Modelica.Media.Interfaces.PartialPureSubstance.setState_dT] setState_dT

Return thermodynamic state from d and T

[Modelica.Media.Interfaces.PartialPureSubstance.density_ph] density_ph

Return density from p and h

[Modelica.Media.Interfaces.PartialPureSubstance.temperature_ph]
temperature_ph

Return temperature from p and h

[Modelica.Media.Interfaces.PartialPureSubstance.pressure_dT] pressure_dT

Return pressure from d and T

[Modelica.Media.Interfaces.PartialPureSubstance.specificEnthalpy_dT]
specificEnthalpy_dT

Return specific enthalpy from d and T

[Modelica.Media.Interfaces.PartialPureSubstance.specificEnthalpy_ps]
specificEnthalpy_ps

Return specific enthalpy from p and s

[Modelica.Media.Interfaces.PartialPureSubstance.temperature_ps]
temperature_ps

Return temperature from p and s

[Modelica.Media.Interfaces.PartialPureSubstance.density_ps] density_ps

Return density from p and s

[Modelica.Media.Interfaces.PartialPureSubstance.specificEnthalpy_pT]
specificEnthalpy_pT

Return specific enthalpy from p and T

[Modelica.Media.Interfaces.PartialPureSubstance.density_pT] density_pT

Return density from p and T

ThermoStates

Enumeration type for independent variables

mediumName="unusablePartialMedium"

Name of the medium

substanceNames={mediumName}

Names of the mixture substances. Set substanceNames={mediumName} if only
one substance.

extraPropertiesNames=fill("", 0)

Names of the additional (extra) transported properties. Set
extraPropertiesNames=fill("",0) if unused

singleState

= true, if u and d are not a function of pressure

reducedX=true

= true if medium contains the equation sum(X) = 1.0; set reducedX=true
if only one substance (see docu for details)

fixedX=false

= true if medium contains the equation X = reference_X

reference_p=101325

Reference pressure of Medium: default 1 atmosphere

reference_T=298.15

Reference temperature of Medium: default 25 deg Celsius

reference_X=fill(1/nX, nX)

Default mass fractions of medium

p_default=101325

Default value for pressure of medium (for initialization)

T_default=Modelica.SIunits.Conversions.from_degC(20)

Default value for temperature of medium (for initialization)

h_default=specificEnthalpy_pTX(p_default, T_default, X_default)

Default value for specific enthalpy of medium (for initialization)

X_default=reference_X

Default value for mass fractions of medium (for initialization)

nS=size(substanceNames, 1)

Number of substances

nX=nS

Number of mass fractions

nXi=if fixedX then 0 else if reducedX then nS - 1 else nS

Number of structurally independent mass fractions (see docu for details)

nC=size(extraPropertiesNames, 1)

Number of extra (outside of standard mass-balance) transported
properties

C_nominal=1.0e-6*ones(nC)

Default for the nominal values for the extra properties

[Modelica.Media.Interfaces.PartialMedium.prandtlNumber] prandtlNumber

Return the Prandtl number

[Modelica.Media.Interfaces.PartialMedium.heatCapacity_cp]
heatCapacity_cp

alias for deprecated name

[Modelica.Media.Interfaces.PartialMedium.heatCapacity_cv]
heatCapacity_cv

alias for deprecated name

[Modelica.Media.Interfaces.PartialMedium.beta] beta

alias for isobaricExpansionCoefficient for user convenience

[Modelica.Media.Interfaces.PartialMedium.kappa] kappa

alias of isothermalCompressibility for user convenience

[Modelica.Media.Interfaces.PartialMedium.density_derp_h] density_derp_h

Return density derivative w.r.t. pressure at const specific enthalpy

[Modelica.Media.Interfaces.PartialMedium.density_derh_p] density_derh_p

Return density derivative w.r.t. specific enthalpy at constant pressure

[Modelica.Media.Interfaces.PartialMedium.specificEnthalpy_pTX]
specificEnthalpy_pTX

Return specific enthalpy from p, T, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.specificEntropy_pTX]
specificEntropy_pTX

Return specific enthalpy from p, T, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.density_pTX] density_pTX

Return density from p, T, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.temperature_phX]
temperature_phX

Return temperature from p, h, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.density_phX] density_phX

Return density from p, h, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.temperature_psX]
temperature_psX

Return temperature from p,s, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.density_psX] density_psX

Return density from p, s, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.specificEnthalpy_psX]
specificEnthalpy_psX

Return specific enthalpy from p, s, and X or Xi

AbsolutePressure

Type for absolute pressure with medium specific attributes

Density

Type for density with medium specific attributes

DynamicViscosity

Type for dynamic viscosity with medium specific attributes

EnthalpyFlowRate

Type for enthalpy flow rate with medium specific attributes

MassFlowRate

Type for mass flow rate with medium specific attributes

MassFraction

Type for mass fraction with medium specific attributes

MoleFraction

Type for mole fraction with medium specific attributes

MolarMass

Type for molar mass with medium specific attributes

MolarVolume

Type for molar volume with medium specific attributes

IsentropicExponent

Type for isentropic exponent with medium specific attributes

SpecificEnergy

Type for specific energy with medium specific attributes

SpecificInternalEnergy

Type for specific internal energy with medium specific attributes

SpecificEnthalpy

Type for specific enthalpy with medium specific attributes

SpecificEntropy

Type for specific entropy with medium specific attributes

SpecificHeatCapacity

Type for specific heat capacity with medium specific attributes

SurfaceTension

Type for surface tension with medium specific attributes

Temperature

Type for temperature with medium specific attributes

ThermalConductivity

Type for thermal conductivity with medium specific attributes

PrandtlNumber

Type for Prandtl number with medium specific attributes

VelocityOfSound

Type for velocity of sound with medium specific attributes

ExtraProperty

Type for unspecified, mass-specific property transported by flow

CumulativeExtraProperty

Type for conserved integral of unspecified, mass specific property

ExtraPropertyFlowRate

Type for flow rate of unspecified, mass-specific property

IsobaricExpansionCoefficient

Type for isobaric expansion coefficient with medium specific attributes

DipoleMoment

Type for dipole moment with medium specific attributes

DerDensityByPressure

Type for partial derivative of density with resect to pressure with
medium specific attributes

DerDensityByEnthalpy

Type for partial derivative of density with resect to enthalpy with
medium specific attributes

DerEnthalpyByPressure

Type for partial derivative of enthalpy with resect to pressure with
medium specific attributes

DerDensityByTemperature

Type for partial derivative of density with resect to temperature with
medium specific attributes

[Modelica.Media.Interfaces.PartialMedium.Choices] Choices

Types, constants to define menu choices

* * * * *

[image72] Modelica.Media.Air.DryAirNasa.dynamicViscosity
========================================================

Simple polynomial for dry air (moisture influence small), valid from
73.15 K to 373.15 K

Information
-----------

::

Dynamic viscosity is computed from temperature using a second order
polynomial with a range of validity between 73 and 373 K.

::

Extends from Modelica.Icons.Function (Icon for functions).

Inputs
------

  -------------------------------------------------------------------------
  Type                                                 Nam Defa Description
                                                       e   ult  
  ---------------------------------------------------- --- ---- -----------
  ThermodynamicState                                   sta      Thermodynam
                                                       te       ic
                                                                state
                                                                record
  -------------------------------------------------------------------------

Outputs
-------

  ------------------------------------------------------------------------
  Type                                                    Nam Description
                                                          e   
  ------------------------------------------------------- --- ------------
  DynamicViscosity                                        eta Dynamic
                                                              viscosity
                                                              [Pa.s]
  ------------------------------------------------------------------------

Modelica definition
-------------------

    redeclare function dynamicViscosity 
      "Simple polynomial for dry air (moisture influence small), valid from 73.15 K to 373.15 K"
      extends Modelica.Icons.Function;
      input ThermodynamicState state "Thermodynamic state record";
      output DynamicViscosity eta "Dynamic viscosity";
    algorithm 
      eta := Incompressible.TableBased.Polynomials_Temp.evaluate({(-4.96717436974791E-011), 5.06626785714286E-008, 1.72937731092437E-005}, Cv.to_degC(state.T));
    end dynamicViscosity;

* * * * *

[image73] Modelica.Media.Air.DryAirNasa.thermalConductivity
===========================================================

Simple polynomial for dry air (moisture influence small), valid from
73.15 K to 373.15 K

Information
-----------

::

Thermal conductivity is computed from temperature using a second order
polynomial with a range of validity between 73 and 373 K.

::

Extends from Modelica.Icons.Function (Icon for functions).

Inputs
------

  -------------------------------------------------------------------------
  Type                                                Nam Defa Description
                                                      e   ult  
  --------------------------------------------------- --- ---- ------------
  ThermodynamicState                                  sta      Thermodynami
                                                      te       c
                                                               state record

  Integer                                             met 1    Dummy for
                                                      hod      compatibilit
                                                               y
                                                               reasons
  -------------------------------------------------------------------------

Outputs
-------

  -------------------------------------------------------------------------
  Type                                                  Name Description
  ----------------------------------------------------- ---- --------------
  ThermalConductivity                                   lamb Thermal
                                                        da   conductivity
                                                             [W/(m.K)]
  -------------------------------------------------------------------------

Modelica definition
-------------------

    redeclare function thermalConductivity 
      "Simple polynomial for dry air (moisture influence small), valid from 73.15 K to 373.15 K"
      extends Modelica.Icons.Function;
      input ThermodynamicState state "Thermodynamic state record";
      input Integer method=1 "Dummy for compatibility reasons";
      output ThermalConductivity lambda "Thermal conductivity";
    algorithm 
      lambda := Incompressible.TableBased.Polynomials_Temp.evaluate({(-4.8737307422969E-008), 7.67803133753502E-005, 0.0241814385504202},Cv.to_degC(state.T));

    end thermalConductivity;

* * * * *

Automatically generated Fri Nov 12 16:31:31 2010.
