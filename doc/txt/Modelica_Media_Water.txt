Modelica.Media.Water: Modelica.Media.Water



Medium models for water

Information
===========

::

This package contains different medium models for water:

-   ConstantPropertyLiquidWater
        Simple liquid water medium (incompressible, constant data).

-   IdealSteam
        Steam water medium as ideal gas from

    Media.IdealGases.SingleGases.H2O
-   WaterIF97 derived models
        High precision water model according to the IAPWS/IF97 standard

    (liquid, steam, two phase region). Models with different independent
    variables are provided as well as models valid only for particular
    regions. The WaterIF97_ph model is valid in all regions and is the
    recommended one to use.

Overview of WaterIF97 derived water models
------------------------------------------

The WaterIF97 models calculate medium properties for water in the
liquid, gas and two phase regions according to the IAPWS/IF97 standard,
i.e., the accepted industrial standard and best compromise between
accuracy and computation time. It has been part of the ThermoFluid
Modelica library and been extended, reorganized and documented to become
part of the Modelica Standard library.

An important feature that distinguishes this implementation of the IF97
steam property standard is that this implementation has been explicitly
designed to work well in dynamic simulations. Computational performance
has been of high importance. This means that there often exist several
ways to get the same result from different functions if one of the
functions is called often but can be optimized for that purpose.

Three variable pairs can be the independent variables of the model:

1.  Pressure p and specific enthalpy h are the most natural choice for
    general applications. This is the recommended choice for most
    general purpose applications, in particular for power plants.
2.  Pressure p and temperature T are the most natural choice for
    applications where water is always in the same phase, both for
    liquid water and steam.
3.  Density d and temperature T are explicit variables of the Helmholtz
    function in the near-critical region and can be the best choice for
    applications with super-critical or near-critial states.

The following quantities are always computed in Medium.Baseproperties:

  ----------------- ------------- -----------------------------
  Variable          Unit          Description
  T                 K             temperature
  u                 J/kg          specific internal energy
  d                 kg/m^3        density
  p                 Pa            pressure
  h                 J/kg          specific enthalpy
  ----------------- ------------- -----------------------------

In some cases additional medium properties are needed. A component that
needs these optional properties has to call one of the following
functions:

  ----------------------------- -------- ----------------------------------
  Function call                 Unit     Description

  Medium.dynamicViscosity(mediu Pa.s     dynamic viscosity
  m.state)                               

  Medium.thermalConductivity(me W/(m.K)  thermal conductivity
  dium.state)                            

  Medium.prandtlNumber(medium.s 1        Prandtl number
  tate)                                  

  Medium.specificEntropy(medium J/(kg.K) specific entropy
  .state)                                

  Medium.heatCapacity_cp(medium J/(kg.K) specific heat capacity at constant
  .state)                                pressure

  Medium.heatCapacity_cv(medium J/(kg.K) specific heat capacity at constant
  .state)                                density

  Medium.isentropicExponent(med 1        isentropic exponent
  ium.state)                             

  Medium.isentropicEnthalpy(pre J/kg     isentropic enthalpy
  ssure,                                 
  medium.state)                          

  Medium.velocityOfSound(medium m/s      velocity of sound
  .state)                                

  Medium.isobaricExpansionCoeff 1/K      isobaric expansion coefficient
  icient(medium.state)                   

  Medium.isothermalCompressibil 1/Pa     isothermal compressibility
  ity(medium.state)                      

  Medium.density_derp_h(medium. kg/(m3.P derivative of density by pressure
  state)                        a)       at constant enthalpy

  Medium.density_derh_p(medium. kg2/(m3. derivative of density by enthalpy
  state)                        J)       at constant pressure

  Medium.density_derp_T(medium. kg/(m3.P derivative of density by pressure
  state)                        a)       at constant temperature

  Medium.density_derT_p(medium. kg/(m3.K derivative of density by
  state)                        )        temperature at constant pressure

  Medium.density_derX(medium.st kg/m3    derivative of density by mass
  ate)                                   fraction

  Medium.molarMass(medium.state kg/mol   molar mass
  )                                      
  ----------------------------- -------- ----------------------------------

More details are given in
Modelica.Media.UsersGuide.MediumUsage.OptionalProperties. Many
additional optional functions are defined to compute properties of
saturated media, either liquid (bubble point) or vapour (dew point). The
argument to such functions is a SaturationProperties record, which can
be set starting from either the saturation pressure or the saturation
temperature. With reference to a model defining a pressure p, a
temperature T, and a SaturationProperties record sat, the following
functions are provided:

  ---------------------- -------- -----------------------------------------
  Function call          Unit     Description

  Medium.saturationPress Pa       Saturation pressure at temperature T
  ure(T)                          

  Medium.saturationTempe K        Saturation temperature at pressure p
  rature(p)                       

  Medium.saturationTempe K/Pa     Derivative of saturation temperature with
  rature_derp(p)                  respect to pressure

  Medium.bubbleEnthalpy( J/kg     Specific enthalpy at bubble point
  sat)                            

  Medium.dewEnthalpy(sat J/kg     Specific enthalpy at dew point
  )                               

  Medium.bubbleEntropy(s J/(kg.K) Specific entropy at bubble point
  at)                             

  Medium.dewEntropy(sat) J/(kg.K) Specific entropy at dew point

  Medium.bubbleDensity(s kg/m3    Density at bubble point
  at)                             

  Medium.dewDensity(sat) kg/m3    Density at dew point

  Medium.dBubbleDensity_ kg/(m3.P Derivative of density at bubble point
  dPressure(sat)         a)       with respect to pressure

  Medium.dDewDensity_dPr kg/(m3.P Derivative of density at dew point with
  essure(sat)            a)       respect to pressure

  Medium.dBubbleEnthalpy J/(kg.Pa Derivative of specific enthalpy at bubble
  _dPressure(sat)        )        point with respect to pressure

  Medium.dDewEnthalpy_dP J/(kg.Pa Derivative of specific enthalpy at dew
  ressure(sat)           )        point with respect to pressure

  Medium.surfaceTension( N/m      Surface tension between liquid and vapour
  sat)                            phase
  ---------------------- -------- -----------------------------------------

Details on usage and some examples are given in:
Modelica.Media.UsersGuide.MediumUsage.TwoPhase.

Many further properties can be computed. Using the well-known Bridgman's
Tables, all first partial derivatives of the standard thermodynamic
variables can be computed easily.

The documentation of the IAPWS/IF97 steam properties can be freely
distributed with computer implementations and are included here (in
directory
Modelica/Resources/Documentation/Media/Water/IF97documentation):

-   IF97.pdf The standards document for the main part of the IF97.
-   Back3.pdf The backwards equations for region 3.
-   crits.pdf The critical point data.
-   meltsub.pdf The melting- and sublimation line formulation (not
    implemented)
-   surf.pdf The surface tension standard definition
-   thcond.pdf The thermal conductivity standard definition
-   visc.pdf The viscosity standard definition

::

Extends from Modelica.Icons.MaterialPropertiesPackage (Icon for package
containing property classes).

Package Content
===============

  ------------------------------------------------------------------------
  Name                                          Description
  --------------------------------------------- --------------------------
  waterConstants                                

  simpleWaterConstants                          

  [image14] ConstantPropertyLiquidWater         Water: Simple liquid water
                                                medium (incompressible,
                                                constant data)

  [image15] IdealSteam                          Water: Steam as ideal gas
                                                from NASA source

  [image16] WaterIF97OnePhase_ph                Water using the IF97
                                                standard, explicit in p
                                                and h, and only valid
                                                outside the two-phase dome

  [image17] WaterIF97_ph                        Water using the IF97
                                                standard, explicit in p
                                                and h

  [image18] WaterIF97_base                      Water: Steam properties as
                                                defined by IAPWS/IF97
                                                standard

  [image19] WaterIF97_fixedregion               Water: Steam properties as
                                                defined by IAPWS/IF97
                                                standard

  [image20] WaterIF97_R1ph                      region 1 (liquid) water
                                                according to IF97 standard

  [image21] WaterIF97_R2ph                      region 2 (steam) water
                                                according to IF97 standard

  [image22] WaterIF97_R3ph                      region 3 water according
                                                to IF97 standard

  [image23] WaterIF97_R4ph                      region 4 water according
                                                to IF97 standard

  [image24] WaterIF97_R5ph                      region 5 water according
                                                to IF97 standard

  [image25] WaterIF97_R1pT                      region 1 (liquid) water
                                                according to IF97 standard

  [image26] WaterIF97_R2pT                      region 2 (steam) water
                                                according to IF97 standard

  [image27] IF97_Utilities                      Low level and utility
                                                computation for high
                                                accuracy water properties
                                                according to the
                                                IAPWS/IF97 standard
  ------------------------------------------------------------------------

Types and constants
===================

    constant Interfaces.PartialTwoPhaseMedium.FluidConstants[1] waterConstants(
       each chemicalFormula = "H2O",
       each structureFormula="H2O",
       each casRegistryNumber="7732-18-5",
       each iupacName="oxidane",
       each molarMass=0.018015268,
       each criticalTemperature=647.096,
       each criticalPressure=22064.0e3,
       each criticalMolarVolume=1/322.0*0.018015268,
       each normalBoilingPoint=373.124,
       each meltingPoint=273.15,
       each triplePointTemperature=273.16,
       each triplePointPressure=611.657,
       each acentricFactor = 0.344,
       each dipoleMoment = 1.8,
       each hasCriticalData=true);

    constant Interfaces.PartialMedium.FluidConstants[1] simpleWaterConstants(
       each chemicalFormula = "H2O",
       each structureFormula="H2O",
       each casRegistryNumber="7732-18-5",
       each iupacName="oxidane",
       each molarMass=0.018015268);

    package StandardWater = WaterIF97_ph 
      "Water using the IF97 standard, explicit in p and h. Recommended for most applications";

    package StandardWaterOnePhase = WaterIF97_pT 
      "Water using the IF97 standard, explicit in p and T. Recommended for one-phase applications";

    package WaterIF97_pT 
      "Water using the IF97 standard, explicit in p and T"
      extends WaterIF97_base(
        ThermoStates = Choices.IndependentVariables.pT,
        final ph_explicit=false,
        final dT_explicit=false,
        final pT_explicit=true,
        final smoothModel=true,
        final onePhase=true);
    end WaterIF97_pT;

* * * * *

Automatically generated Fri Nov 12 16:31:34 2010.
