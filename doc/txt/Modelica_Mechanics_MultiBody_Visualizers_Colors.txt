Modelica.Mechanics.MultiBody.Visualizers.Colors



Modelica.Mechanics.MultiBody.Visualizers.Colors
===============================================

Library of functions operating on color

Information
-----------

::

This package contains functions to operate on colors. Note, a color is
represented as a Real array with 3 elements where the elements are the
red, green, blue values of the RGB color model. Every element must be in
the range 0..255. The type of a color is Real and not Integer in order
that a color can be used with less problems in a model, since in a model
an Integer type could only be used in a when-clause. Typical declaration
of a color value:

      Real color[3](each min=0, each max=255);

This definition is also available as type
Modelica.Mechanics.MultiBody.Types.RealColor.

::

Extends from Modelica.Icons.Package (Icon for standard packages).

Package Content
---------------

  ------------------------------------------------------------------------
  Name                                                  Description
  ----------------------------------------------------- ------------------
  [image3] ColorMaps                                    Library of
                                                        functions
                                                        returning color
                                                        maps

  [image4] colorMapToSvg                                Save a color map
                                                        on file in svg
                                                        (scalable vector
                                                        graphics) format

  [image5] scalarToColor                                Map a scalar to a
                                                        color using a
                                                        color map
  ------------------------------------------------------------------------

* * * * *

Modelica.Mechanics.MultiBody.Visualizers.Colors.colorMapToSvg
=============================================================

Save a color map on file in svg (scalable vector graphics) format

Information
-----------

::

Syntax

      Colors.colorMapToSvg(colorMap);
      Colors.colorMapToSvg(colorMap,
                           fileName   = "colorMap.svg",
                           width      =  10,  // [mm]
                           height     = 100,  // [mm]
                           x          =  20,  // [mm]
                           y          =  10,  // [mm]
                           T_min      =   0,
                           T_max      = 100,
                           nScalars   =  11,
                           format     = ".3g",
                           fontSize   =  11,  // [pt]
                           textWidth  =   8,  // [mm]
                           caption    = "",
                           headerType = Colors.colorMapToSvg.Header.svgBeginAndEnd)
                                                                 // svgBegin
                                                                 // svgEnd
                                                                 // svgNoHeader

Description

This function saves the color map "Real colorMap[:,3]" on file
"fileName" in svg format. The color map has a width of "width" and a
height of "height" and the upper left corner is placed at coordinates
"(x,y)". Over the color map, a caption "caption" is placed. On the right
side of the color map, a set of scalar field values T is displayed where
"T_min" is placed at colorMap[1,:], "T_max" is placed at colorMap[end,:]
and "nScalars" values between "T_min" and "T_max" (including T_min and
T_max) are shown. The printing format of the numbers is defined with
"format", see definition below. With argument "headerType" it is defined
whether "svg" begin and end lines are printed. If the "begin" svg tag
shall be printed, file "fileName" is deleted, if it already exists.
Otherwise, all output is appended to the file "fileName".

A "svg" file can be displayed by a web browser, such as Firefox by
dragging the file in the browser window. Alternatively, a svg-file can
be loaded in a graphics program, such as the free Incscape, can be
manipulated and can be exported in other graphic formats. The following
image was generated with a call to "colorMapToSvg", the generated file
was loaded in Incscape and exported in "png" format:

  [image6]

The "format" argument defines the string formating according to ANSI-C
without "%" and "*" character (e.g., ".6g", "14.5e", "+6f"). In
particular:

format = "[<flags>] [<width>] [.<precision>] <conversion>" with

    ------------- ----------------------------------------------------------
    <flags>       zero, one or more of
                      "-": left adjustment of the converted number "+":
                      number will always be printed with a sign "0": padding
                      to the field width with leading zeros
                  
                  

    <width>       Minimum field width. The converted number will be printed
                  in a field at
                      least this wide and wider if necessary. If the
                      converted number has fewer characters it will be
                      padded on the left (or the right depending on <flags>)
                      with blanks or 0 (depending on <flags>).
                  
                  

    <precision>   The number of digits to be printed after the decimal point
                  for
                      e, E, or f conversions, or the number of significant
                      digits for g or G conversions.
                  
                  

    <conversion>  = "e": Exponential notation using a lower case e
                      = "E": Exponential notation using an upper case E =
                      "f": Fixed point notation = "g": Either "e" or "f" =
                      "G": Same as "g", but with upper case E
                  
                  
    ------------- ----------------------------------------------------------

::

Inputs
------

  --------------------------------------------------------------------------
  Type                                    Name  Default   Description
  --------------------------------------- ----- --------- ------------------
  Real                                    color           Color map to be
                                          Map[:           stored in svg
                                          ,               format
                                          3]              

  String                                  fileN "colorMap File where the svg
                                          ame   .svg"     representation
                                                          shall be stored

  Real                                    width 10        Width in
                                                          svg-figure [mm]

  Real                                    heigh 100       Height in
                                          t               svg-figure [mm]

  Real                                    x     20        X-Coordinate of
                                                          left upper corner
                                                          [mm]

  Real                                    y     10        Y-Coordinate of
                                                          left upper corner
                                                          [mm]

  Real                                    T_min 0         Value of scalar
                                                          corresponding to
                                                          colorMap[1,:]

  Real                                    T_max 100       Value of scalar
                                                          corresponding to
                                                          colorMap[end,:]

  Integer                                 nScal 11        Number of scalars
                                          ars             to be displayed at
                                                          the right side

  String                                  forma ".3g"     Format of the
                                          t               numbers

  Real                                    fontS 11        Font size in [pt]
                                          ize             

  Real                                    textW 8         Numbers are right
                                          idth            justified starting
                                                          at
                                                          x+width+textWidth
                                                          [mm]

  String                                  capti ""        Caption above the
                                          on              map

  HeaderType                              heade Colors.co Type of header
                                          rType lorMapToS 
                                                vg.Header 
                                                T...      
  --------------------------------------------------------------------------

Modelica definition
-------------------

    function colorMapToSvg 
      "Save a color map on file in svg (scalable vector graphics) format"
     encapsulated type HeaderType = enumeration(
          svgBeginAndEnd,
          svgBegin,
          svgEnd,
          noHeader);
      import Modelica.Utilities.Streams.print;
      input Real colorMap[:,3] "Color map to be stored in svg format";
      input String fileName="colorMap.svg" 
        "File where the svg representation shall be stored";
      input Real width(unit="mm")=10 "Width in svg-figure";
      input Real height(unit="mm")=100 "Height in svg-figure";
      input Real x(unit="mm")=20 "X-Coordinate of left upper corner";
      input Real y(unit="mm")=10 "Y-Coordinate of left upper corner";
      input Real T_min=0 "Value of scalar corresponding to colorMap[1,:]";
      input Real T_max=100 "Value of scalar corresponding to colorMap[end,:]";
      input Integer nScalars=11 
        "Number of scalars to be displayed at the right side";
      input String format=".3g" "Format of the numbers";
      input Real fontSize=11 "Font size in [pt]";
      input Real textWidth(unit="mm")=8 
        "Numbers are right justified starting at x+width+textWidth";
      input String caption="" "Caption above the map";
      input HeaderType headerType=Colors.colorMapToSvg.HeaderType.svgBeginAndEnd 
        "Type of header";
    protected 
      Integer nc = size(colorMap,1);
      Real dy=height/nc;
      Real yy=y-dy;
      String strWidth=String(width);
      String strHeight=String(dy);
      Real T;
      Integer ni;
      constant Real ptToMm=127/360 "1 Point = ptToMm mm";
      Real fontHeight(unit="mm") = fontSize*ptToMm;
      Real xx=x+width+textWidth;
      String strXX=String(xx);
      Real xHeading=x+width/2;
      Real yHeading=y-1.2*fontHeight;
    algorithm 
      if headerType==HeaderType.svgBeginAndEnd or 
         headerType==HeaderType.svgBegin then
         Modelica.Utilities.Files.remove(fileName);
         print("... generating svg-file: " + Modelica.Utilities.Files.fullPathName(fileName));
      end if;
      if caption<>"" then
         print("... " + caption);
      end if;

      if headerType==HeaderType.svgBeginAndEnd or 
         headerType==HeaderType.svgBegin then
         print("<svg xmlns=\"http://www.w3.org/2000/svg\">", fileName);
      end if;

      print("  <g>", fileName);

      // Print colors
      for i in nc:-1:1 loop
         // print:  <rect x="XXmm" y="XXmm" width="YYmm" height="ZZmm" style="fill:rgb(100,128,255);stroke:none"/>
         yy :=yy + dy;
         print("    <rect x=\"" + String(x) +
               "mm\" y=\"" + String(yy) +
               "mm\" width=\"" + strWidth +
               "mm\" height=\"" + strHeight +
               "mm\" style=\"fill:rgb(" + String(integer(colorMap[i,1])) + ","
                                        + String(integer(colorMap[i,2])) + ","
                                        + String(integer(colorMap[i,3])) +
               ");stroke:none\"/>", fileName);
      end for;

      // Print numbers
      ni :=if nScalars == 1 then 2 else if nScalars < 1 then 
                                 0 else nScalars;
      dy:=height/(ni-1);
      yy:=y - dy+0.3*fontHeight;
      for i in ni:-1:1 loop
        // print: <text x="22mm" y="12mm" font-family="Arial,sans-serif" font-size="11pt">1.2345</text>
        yy :=yy + dy;
        T := T_min + (T_max - T_min)*(i-1)/(ni-1);
        print("    <text x=\"" + strXX +
              "mm\" y=\"" + String(yy) +
              "mm\" font-family=\"Fixedsys\" font-size=\"" + String(fontSize) +
              "pt\" text-anchor=\"end\">" + String(T,format=format) +
              "</text>", fileName);
      end for;

      if caption <> "" then
         print("   <text x=\"" + String(xHeading) +
               "mm\" y=\"" + String(yHeading) +
               "mm\" font-family=\"Fixedsys\" font-size=\"" + String(fontSize) +
               "pt\" text-anchor=\"middle\">" + caption +
               "</text>", fileName);
      end if;

      print("  </g>", fileName);

      if headerType==HeaderType.svgBeginAndEnd or 
         headerType==HeaderType.svgEnd then
         print("</svg>",fileName);
      end if;
    end colorMapToSvg;

* * * * *

Modelica.Mechanics.MultiBody.Visualizers.Colors.scalarToColor
=============================================================

Map a scalar to a color using a color map

Information
-----------

::

Syntax

      //Real T, T_min, T_max, colorMap[:,3];
      Colors.scalarToColor(T, T_min, T_max, colorMap);

Description

This function returns an rgb color Real[3] that corresponds to the value
of "T". The color is selected from the colorMap by interpolation so that
"T_min" corresponds to "colorMap[1,:]" and "T_max" corresponds to
"colorMap[end,:]".

See also

ColorMaps, colorMapToSvg, PipeWithScalarField.

::

Inputs
------

  --------------------------------------------------------------------------
  Type    Name             Default    Description
  ------- ---------------- ---------- --------------------------------------
  Real    T                           Scalar value

  Real    T_min                       T <= T_min is mapped to colorMap[1,:]

  Real    T_max                       T >= T_max is mapped to
                                      colorMap[end,:]

  Real    colorMap[:, 3]              Color map
  --------------------------------------------------------------------------

Outputs
-------

  Type      Name          Description
  --------- ------------- ----------------------------
  Real      color[3]      Color of scalar value T

Modelica definition
-------------------

    function scalarToColor "Map a scalar to a color using a color map"
      input Real T "Scalar value";
      input Real T_min "T <= T_min is mapped to colorMap[1,:]";
      input Real T_max "T >= T_max is mapped to colorMap[end,:]";
      input Real colorMap[:,3] "Color map";
      output Real color[3] "Color of scalar value T";
    algorithm 
      color :=colorMap[integer((size(colorMap, 1) - 1)/(T_max - T_min)*
                                min((max(T,T_min) - T_min), T_max) + 1), :];
    end scalarToColor;

* * * * *

Automatically generated Fri Nov 12 16:30:40 2010.
