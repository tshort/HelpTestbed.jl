Modelica.Media.Interfaces.PartialMixtureMedium



Modelica.Media.Interfaces.PartialMixtureMedium
==============================================

Base class for pure substances of several chemical substances

Information
-----------

Extends from PartialMedium (Partial medium properties (base package of
all media packages)).

Package Content
---------------

Name

Description

[Modelica.Media.Interfaces.PartialMixtureMedium.ThermodynamicState]
ThermodynamicState

thermodynamic state variables

[Modelica.Media.Interfaces.PartialMixtureMedium.FluidConstants]
FluidConstants

extended fluid constants

fluidConstants

constant data for the fluid

[Modelica.Media.Interfaces.PartialMixtureMedium.gasConstant] gasConstant

Return the gas constant of the mixture (also for liquids)

[Modelica.Media.Interfaces.PartialMixtureMedium.moleToMassFractions]
moleToMassFractions

Return mass fractions X from mole fractions

[Modelica.Media.Interfaces.PartialMixtureMedium.massToMoleFractions]
massToMoleFractions

Return mole fractions from mass fractions X

Inherited

ThermoStates

Enumeration type for independent variables

mediumName="unusablePartialMedium"

Name of the medium

substanceNames={mediumName}

Names of the mixture substances. Set substanceNames={mediumName} if only
one substance.

extraPropertiesNames=fill("", 0)

Names of the additional (extra) transported properties. Set
extraPropertiesNames=fill("",0) if unused

singleState

= true, if u and d are not a function of pressure

reducedX=true

= true if medium contains the equation sum(X) = 1.0; set reducedX=true
if only one substance (see docu for details)

fixedX=false

= true if medium contains the equation X = reference_X

reference_p=101325

Reference pressure of Medium: default 1 atmosphere

reference_T=298.15

Reference temperature of Medium: default 25 deg Celsius

reference_X=fill(1/nX, nX)

Default mass fractions of medium

p_default=101325

Default value for pressure of medium (for initialization)

T_default=Modelica.SIunits.Conversions.from_degC(20)

Default value for temperature of medium (for initialization)

h_default=specificEnthalpy_pTX(p_default, T_default, X_default)

Default value for specific enthalpy of medium (for initialization)

X_default=reference_X

Default value for mass fractions of medium (for initialization)

nS=size(substanceNames, 1)

Number of substances

nX=nS

Number of mass fractions

nXi=if fixedX then 0 else if reducedX then nS - 1 else nS

Number of structurally independent mass fractions (see docu for details)

nC=size(extraPropertiesNames, 1)

Number of extra (outside of standard mass-balance) transported
properties

C_nominal=1.0e-6*ones(nC)

Default for the nominal values for the extra properties

[Modelica.Media.Interfaces.PartialMedium.BaseProperties] BaseProperties

Base properties (p, d, T, h, u, R, MM and, if applicable, X and Xi) of a
medium

[Modelica.Media.Interfaces.PartialMedium.setState_pTX] setState_pTX

Return thermodynamic state as function of p, T and composition X or Xi

[Modelica.Media.Interfaces.PartialMedium.setState_phX] setState_phX

Return thermodynamic state as function of p, h and composition X or Xi

[Modelica.Media.Interfaces.PartialMedium.setState_psX] setState_psX

Return thermodynamic state as function of p, s and composition X or Xi

[Modelica.Media.Interfaces.PartialMedium.setState_dTX] setState_dTX

Return thermodynamic state as function of d, T and composition X or Xi

[Modelica.Media.Interfaces.PartialMedium.setSmoothState] setSmoothState

Return thermodynamic state so that it smoothly approximates: if x > 0
then state_a else state_b

[Modelica.Media.Interfaces.PartialMedium.dynamicViscosity]
dynamicViscosity

Return dynamic viscosity

[Modelica.Media.Interfaces.PartialMedium.thermalConductivity]
thermalConductivity

Return thermal conductivity

[Modelica.Media.Interfaces.PartialMedium.prandtlNumber] prandtlNumber

Return the Prandtl number

[Modelica.Media.Interfaces.PartialMedium.pressure] pressure

Return pressure

[Modelica.Media.Interfaces.PartialMedium.temperature] temperature

Return temperature

[Modelica.Media.Interfaces.PartialMedium.density] density

Return density

[Modelica.Media.Interfaces.PartialMedium.specificEnthalpy]
specificEnthalpy

Return specific enthalpy

[Modelica.Media.Interfaces.PartialMedium.specificInternalEnergy]
specificInternalEnergy

Return specific internal energy

[Modelica.Media.Interfaces.PartialMedium.specificEntropy]
specificEntropy

Return specific entropy

[Modelica.Media.Interfaces.PartialMedium.specificGibbsEnergy]
specificGibbsEnergy

Return specific Gibbs energy

[Modelica.Media.Interfaces.PartialMedium.specificHelmholtzEnergy]
specificHelmholtzEnergy

Return specific Helmholtz energy

[Modelica.Media.Interfaces.PartialMedium.specificHeatCapacityCp]
specificHeatCapacityCp

Return specific heat capacity at constant pressure

[Modelica.Media.Interfaces.PartialMedium.heatCapacity_cp]
heatCapacity_cp

alias for deprecated name

[Modelica.Media.Interfaces.PartialMedium.specificHeatCapacityCv]
specificHeatCapacityCv

Return specific heat capacity at constant volume

[Modelica.Media.Interfaces.PartialMedium.heatCapacity_cv]
heatCapacity_cv

alias for deprecated name

[Modelica.Media.Interfaces.PartialMedium.isentropicExponent]
isentropicExponent

Return isentropic exponent

[Modelica.Media.Interfaces.PartialMedium.isentropicEnthalpy]
isentropicEnthalpy

Return isentropic enthalpy

[Modelica.Media.Interfaces.PartialMedium.velocityOfSound]
velocityOfSound

Return velocity of sound

[Modelica.Media.Interfaces.PartialMedium.isobaricExpansionCoefficient]
isobaricExpansionCoefficient

Return overall the isobaric expansion coefficient beta

[Modelica.Media.Interfaces.PartialMedium.beta] beta

alias for isobaricExpansionCoefficient for user convenience

[Modelica.Media.Interfaces.PartialMedium.isothermalCompressibility]
isothermalCompressibility

Return overall the isothermal compressibility factor

[Modelica.Media.Interfaces.PartialMedium.kappa] kappa

alias of isothermalCompressibility for user convenience

[Modelica.Media.Interfaces.PartialMedium.density_derp_h] density_derp_h

Return density derivative w.r.t. pressure at const specific enthalpy

[Modelica.Media.Interfaces.PartialMedium.density_derh_p] density_derh_p

Return density derivative w.r.t. specific enthalpy at constant pressure

[Modelica.Media.Interfaces.PartialMedium.density_derp_T] density_derp_T

Return density derivative w.r.t. pressure at const temperature

[Modelica.Media.Interfaces.PartialMedium.density_derT_p] density_derT_p

Return density derivative w.r.t. temperature at constant pressure

[Modelica.Media.Interfaces.PartialMedium.density_derX] density_derX

Return density derivative w.r.t. mass fraction

[Modelica.Media.Interfaces.PartialMedium.molarMass] molarMass

Return the molar mass of the medium

[Modelica.Media.Interfaces.PartialMedium.specificEnthalpy_pTX]
specificEnthalpy_pTX

Return specific enthalpy from p, T, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.specificEntropy_pTX]
specificEntropy_pTX

Return specific enthalpy from p, T, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.density_pTX] density_pTX

Return density from p, T, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.temperature_phX]
temperature_phX

Return temperature from p, h, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.density_phX] density_phX

Return density from p, h, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.temperature_psX]
temperature_psX

Return temperature from p,s, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.density_psX] density_psX

Return density from p, s, and X or Xi

[Modelica.Media.Interfaces.PartialMedium.specificEnthalpy_psX]
specificEnthalpy_psX

Return specific enthalpy from p, s, and X or Xi

AbsolutePressure

Type for absolute pressure with medium specific attributes

Density

Type for density with medium specific attributes

DynamicViscosity

Type for dynamic viscosity with medium specific attributes

EnthalpyFlowRate

Type for enthalpy flow rate with medium specific attributes

MassFlowRate

Type for mass flow rate with medium specific attributes

MassFraction

Type for mass fraction with medium specific attributes

MoleFraction

Type for mole fraction with medium specific attributes

MolarMass

Type for molar mass with medium specific attributes

MolarVolume

Type for molar volume with medium specific attributes

IsentropicExponent

Type for isentropic exponent with medium specific attributes

SpecificEnergy

Type for specific energy with medium specific attributes

SpecificInternalEnergy

Type for specific internal energy with medium specific attributes

SpecificEnthalpy

Type for specific enthalpy with medium specific attributes

SpecificEntropy

Type for specific entropy with medium specific attributes

SpecificHeatCapacity

Type for specific heat capacity with medium specific attributes

SurfaceTension

Type for surface tension with medium specific attributes

Temperature

Type for temperature with medium specific attributes

ThermalConductivity

Type for thermal conductivity with medium specific attributes

PrandtlNumber

Type for Prandtl number with medium specific attributes

VelocityOfSound

Type for velocity of sound with medium specific attributes

ExtraProperty

Type for unspecified, mass-specific property transported by flow

CumulativeExtraProperty

Type for conserved integral of unspecified, mass specific property

ExtraPropertyFlowRate

Type for flow rate of unspecified, mass-specific property

IsobaricExpansionCoefficient

Type for isobaric expansion coefficient with medium specific attributes

DipoleMoment

Type for dipole moment with medium specific attributes

DerDensityByPressure

Type for partial derivative of density with resect to pressure with
medium specific attributes

DerDensityByEnthalpy

Type for partial derivative of density with resect to enthalpy with
medium specific attributes

DerEnthalpyByPressure

Type for partial derivative of enthalpy with resect to pressure with
medium specific attributes

DerDensityByTemperature

Type for partial derivative of density with resect to temperature with
medium specific attributes

[Modelica.Media.Interfaces.PartialMedium.Choices] Choices

Types, constants to define menu choices

Types and constants
-------------------

    constant FluidConstants[nS] fluidConstants "constant data for the fluid";

* * * * *

[image48] Modelica.Media.Interfaces.PartialMixtureMedium.ThermodynamicState
===========================================================================

thermodynamic state variables

Information
-----------

Extends from (Minimal variable set that is available as input argument
to every medium function).

Modelica definition
-------------------

    redeclare replaceable record extends ThermodynamicState 
      "thermodynamic state variables"
      AbsolutePressure p "Absolute pressure of medium";
      Temperature T "Temperature of medium";
      MassFraction X[nX] "Mass fractions (= (component mass)/total mass  m_i/m)";
    end ThermodynamicState;

* * * * *

[image49] Modelica.Media.Interfaces.PartialMixtureMedium.FluidConstants
=======================================================================

extended fluid constants

Information
-----------

Extends from (critical, triple, molecular and other standard data of
fluid).

Modelica definition
-------------------

    redeclare replaceable record extends FluidConstants 
      "extended fluid constants"
      Temperature criticalTemperature "critical temperature";
      AbsolutePressure criticalPressure "critical pressure";
      MolarVolume criticalMolarVolume "critical molar Volume";
      Real acentricFactor "Pitzer acentric factor";
      Temperature triplePointTemperature "triple point temperature";
      AbsolutePressure triplePointPressure "triple point pressure";
      Temperature meltingPoint "melting point at 101325 Pa";
      Temperature normalBoilingPoint "normal boiling point (at 101325 Pa)";
      DipoleMoment dipoleMoment 
        "dipole moment of molecule in Debye (1 debye = 3.33564e10-30 C.m)";
      Boolean hasIdealGasHeatCapacity=false 
        "true if ideal gas heat capacity is available";
      Boolean hasCriticalData=false "true if critical data are known";
      Boolean hasDipoleMoment=false "true if a dipole moment known";
      Boolean hasFundamentalEquation=false "true if a fundamental equation";
      Boolean hasLiquidHeatCapacity=false 
        "true if liquid heat capacity is available";
      Boolean hasSolidHeatCapacity=false "true if solid heat capacity is available";
      Boolean hasAccurateViscosityData=false 
        "true if accurate data for a viscosity function is available";
      Boolean hasAccurateConductivityData=false 
        "true if accurate data for thermal conductivity is available";
      Boolean hasVapourPressureCurve=false 
        "true if vapour pressure data, e.g., Antoine coefficents are known";
      Boolean hasAcentricFactor=false "true if Pitzer accentric factor is known";
      SpecificEnthalpy HCRIT0=0.0 
        "Critical specific enthalpy of the fundamental equation";
      SpecificEntropy SCRIT0=0.0 
        "Critical specific entropy of the fundamental equation";
      SpecificEnthalpy deltah=0.0 
        "Difference between specific enthalpy model (h_m) and f.eq. (h_f) (h_m - h_f)";
      SpecificEntropy deltas=0.0 
        "Difference between specific enthalpy model (s_m) and f.eq. (s_f) (s_m - s_f)";
    end FluidConstants;

* * * * *

[image50] Modelica.Media.Interfaces.PartialMixtureMedium.gasConstant
====================================================================

Return the gas constant of the mixture (also for liquids)

Information
-----------

Extends from Modelica.Icons.Function (Icon for functions).

Inputs
------

  -------------------------------------------------------------------------
  Type                                                   Nam Defa Descripti
                                                         e   ult  on
  ------------------------------------------------------ --- ---- ---------
  ThermodynamicState                                     sta      thermodyn
                                                         te       amic
                                                                  state
  -------------------------------------------------------------------------

Outputs
-------

  -------------------------------------------------------------------------
  Type                                             Name Description
  ------------------------------------------------ ---- -------------------
  SpecificHeatCapacity                             R    mixture gas
                                                        constant [J/(kg.K)]
  -------------------------------------------------------------------------

Modelica definition
-------------------

    replaceable function gasConstant 
      "Return the gas constant of the mixture (also for liquids)"
        extends Modelica.Icons.Function;
        input ThermodynamicState state "thermodynamic state";
        output SI.SpecificHeatCapacity R "mixture gas constant";
    end gasConstant;

* * * * *

[image51] Modelica.Media.Interfaces.PartialMixtureMedium.moleToMassFractions
============================================================================

Return mass fractions X from mole fractions

Information
-----------

Extends from Modelica.Icons.Function (Icon for functions).

Inputs
------

  -------------------------------------------------------------------------
  Type                                        Name     Defa Description
                                                       ult  
  ------------------------------------------- -------- ---- ---------------
  MoleFraction                                moleFrac      Mole fractions
                                              tions[:]      of mixture [1]

  MolarMass                                   MMX[:]        molar masses of
                                                            components
                                                            [kg/mol]
  -------------------------------------------------------------------------

Outputs
-------

  -------------------------------------------------------------------------
  Type                                  Name            Description
  ------------------------------------- --------------- -------------------
  MassFraction                          X[size(moleFrac Mass fractions of
                                        tions,          gas mixture [1]
                                        1)]             
  -------------------------------------------------------------------------

Modelica definition
-------------------

    function moleToMassFractions 
      "Return mass fractions X from mole fractions"
      extends Modelica.Icons.Function;
      input SI.MoleFraction moleFractions[:] "Mole fractions of mixture";
      input MolarMass[:] MMX "molar masses of components";
      output SI.MassFraction X[size(moleFractions, 1)] 
        "Mass fractions of gas mixture";
    protected 
      MolarMass Mmix =  moleFractions*MMX "molar mass of mixture";
    algorithm 
      for i in 1:size(moleFractions, 1) loop
        X[i] := moleFractions[i]*MMX[i] /Mmix;
      end for;
    end moleToMassFractions;

* * * * *

[image52] Modelica.Media.Interfaces.PartialMixtureMedium.massToMoleFractions
============================================================================

Return mole fractions from mass fractions X

Information
-----------

Extends from Modelica.Icons.Function (Icon for functions).

Inputs
------

  -------------------------------------------------------------------------
  Type                                   Name  Defaul Description
                                               t      
  -------------------------------------- ----- ------ ---------------------
  MassFraction                           X[:]         Mass fractions of
                                                      mixture [1]

  MolarMass                              MMX[:        molar masses of
                                         ]            components [kg/mol]
  -------------------------------------------------------------------------

Outputs
-------

  -------------------------------------------------------------------------
  Type                                  Name            Description
  ------------------------------------- --------------- -------------------
  MoleFraction                          moleFractions[s Mole fractions of
                                        ize(X,          gas mixture [1]
                                        1)]             
  -------------------------------------------------------------------------

Modelica definition
-------------------

    function massToMoleFractions 
      "Return mole fractions from mass fractions X"
      extends Modelica.Icons.Function;
      input SI.MassFraction X[:] "Mass fractions of mixture";
      input SI.MolarMass[:] MMX "molar masses of components";
      output SI.MoleFraction moleFractions[size(X, 1)] 
        "Mole fractions of gas mixture";
    protected 
      Real invMMX[size(X, 1)] "inverses of molar weights";
      SI.MolarMass Mmix "molar mass of mixture";
    algorithm 
      for i in 1:size(X, 1) loop
        invMMX[i] := 1/MMX[i];
      end for;
      Mmix := 1/(X*invMMX);
      for i in 1:size(X, 1) loop
        moleFractions[i] := Mmix*X[i]/MMX[i];
      end for;
    end massToMoleFractions;

* * * * *

Automatically generated Fri Nov 12 16:31:29 2010.
