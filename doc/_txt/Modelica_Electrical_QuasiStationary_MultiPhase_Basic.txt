Modelica.Electrical.QuasiStationary.MultiPhase.Basic



Modelica.Electrical.QuasiStationary.MultiPhase.Basic
====================================================

Basic components for AC multiphase models

Information
-----------

::

This package hosts basic models for quasi stationary multiphase
circuits. Quasi stationary theory can be found in the references.

See also

SinglePhase.Basic

::

Extends from Modelica.Icons.Package (Icon for standard packages).

Package Content
---------------

  ------------------------------------------------------------------------
  Name                                                           Descripti
                                                                 on
  -------------------------------------------------------------- ---------
  [image14] Star                                                 Star
                                                                 connectio
                                                                 n

  [image15] Delta                                                Delta
                                                                 (polygon)
                                                                 connectio
                                                                 n

  [image16] PlugToPin_p                                          Connect
                                                                 one
                                                                 (positive
                                                                 )
                                                                 pin

  [image17] PlugToPin_n                                          Connect
                                                                 one
                                                                 (negative
                                                                 )
                                                                 pin

  [image18] PlugToPins_p                                         Connect
                                                                 all
                                                                 (positive
                                                                 )
                                                                 pins

  [image19] PlugToPins_n                                         Connect
                                                                 all
                                                                 (negative
                                                                 )
                                                                 pins

  [image20] Resistor                                             Multiphas
                                                                 e
                                                                 linear
                                                                 resistor

  [image21] Conductor                                            Multiphas
                                                                 e
                                                                 linear
                                                                 conductor

  [image22] Capacitor                                            Multiphas
                                                                 e
                                                                 linear
                                                                 capacitor

  [image23] Inductor                                             Multiphas
                                                                 e
                                                                 linear
                                                                 inductor

  [image24] VariableResistor                                     Multiphas
                                                                 e
                                                                 variable
                                                                 resistor

  [image25] VariableConductor                                    Multiphas
                                                                 e
                                                                 variable
                                                                 conductor

  [image26] VariableCapacitor                                    Multiphas
                                                                 e
                                                                 variable
                                                                 capacitor

  [image27] VariableInductor                                     Multiphas
                                                                 e
                                                                 variable
                                                                 inductor
  ------------------------------------------------------------------------

* * * * *

[image28] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Star
===================================================================

Star connection

Information
-----------

::

Star (wye) connection of a multi phase circuit. The potentials at the
star points are the same.

See also

Delta

::

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            Number of phases

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  PositivePlug                                                  plug 
                                                                _p   

  NegativePin                                                   pin_ 
                                                                n    
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model Star "Star connection"
      parameter Integer m(final min=1) = 3 "Number of phases";
      Interfaces.PositivePlug plug_p(final m=m);
      QuasiStationary.SinglePhase.Interfaces.NegativePin pin_n;
      PlugToPins_p plugToPins_p;
    equation 
      for j in 1:m loop
        connect(plugToPins_p.pin_p[j], pin_n);
      end for;
      connect(plug_p, plugToPins_p.plug_p);
    end Star;

* * * * *

[image29] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Delta
====================================================================

Delta (polygon) connection

Information
-----------

::

Delta (polygon) connection of a multi phase circuit.

See also

Star

::

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            Number of phases

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  PositivePlug                                                  plug 
                                                                _p   

  NegativePlug                                                  plug 
                                                                _n   
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model Delta "Delta (polygon) connection"
      parameter Integer m(final min=2) = 3 "Number of phases";
      Interfaces.PositivePlug plug_p(final m=m);
      Interfaces.NegativePlug plug_n(final m=m);

      PlugToPins_p plugToPins_p;
      PlugToPins_n plugToPins_n;
    equation 
      for j in 1:m loop
        if j<m then
          connect(plugToPins_p.pin_p[j], plugToPins_n.pin_n[j+1]);
        else
          connect(plugToPins_p.pin_p[j], plugToPins_n.pin_n[1]);
        end if;
      end for;
      connect(plug_p, plugToPins_p.plug_p);
      connect(plugToPins_n.plug_n, plug_n);
    end Delta;

* * * * *

[image30] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.PlugToPin_p
==========================================================================

Connect one (positive) pin

Information
-----------

::

Connects the single phase (positive) pin k of the multi phase (positive)
plug to a single phase (positive) pin.

See also

PlugToPin_n, PlutToPins_p, PlugToPins_n

::

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            Number of phases
  Integer      k         1            Phase index

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  PositivePlug                                                  plug 
                                                                _p   

  PositivePin                                                   pin_ 
                                                                p    
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model PlugToPin_p "Connect one (positive) pin"
      parameter Integer m(final min=1) = 3 "Number of phases";
      parameter Integer k(
        final min=1,
        final max=m) = 1 "Phase index";
      Interfaces.PositivePlug plug_p(final m=m);
      QuasiStationary.SinglePhase.Interfaces.PositivePin pin_p;
    equation 
      Connections.branch(plug_p.reference, pin_p.reference);
    //Connections.potentialRoot(plug_p.reference);
    //Connections.potentialRoot(pin_p.reference);
      plug_p.reference.gamma = pin_p.reference.gamma;
      pin_p.v = plug_p.pin[k].v;
      for j in 1:m loop
        plug_p.pin[j].i = if j == k then -pin_p.i else Complex(0);
       end for;
    end PlugToPin_p;

* * * * *

[image31] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.PlugToPin_n
==========================================================================

Connect one (negative) pin

Information
-----------

::

Connects the single phase (negative) pin k of the multi phase (negative)
plug to a single phase (negative) pin.

See also

PlugToPin_p, PlutToPins_p, PlugToPins_n

::

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            Number of phases
  Integer      k         1            Phase index

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  NegativePlug                                                  plug 
                                                                _n   

  NegativePin                                                   pin_ 
                                                                n    
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model PlugToPin_n "Connect one (negative) pin"
      parameter Integer m(final min=1) = 3 "Number of phases";
      parameter Integer k(
        final min=1,
        final max=m) = 1 "Phase index";
      Interfaces.NegativePlug plug_n(final m=m);
      QuasiStationary.SinglePhase.Interfaces.NegativePin pin_n;
    equation 
      Connections.branch(plug_n.reference, pin_n.reference);
    //Connections.potentialRoot(plug_n.reference);
    //Connections.potentialRoot(pin_n.reference);
      plug_n.reference.gamma = pin_n.reference.gamma;
      pin_n.v = plug_n.pin[k].v;
      for j in 1:m loop
        plug_n.pin[j].i = if j == k then -pin_n.i else Complex(0);
      end for;
    end PlugToPin_n;

* * * * *

[image32] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.PlugToPins_p
===========================================================================

Connect all (positive) pins

Information
-----------

::

Connects all m single phase (positive) pins of the multi phase
(positive) plug to an array of m single phase (positive) pins.

See also

PlugToPin_p, PlugToPin_n, PlugToPins_n

::

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            number of phases

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                         Name  Descri
                                                                     ption
  ------------------------------------------------------------ ----- ------
  PositivePlug                                                 plug_ 
                                                               p     

  PositivePin                                                  pin_p 
                                                               [m]   
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model PlugToPins_p "Connect all (positive) pins"
      parameter Integer m(final min=1) = 3 "number of phases";
      Interfaces.PositivePlug plug_p(final m=m);
      QuasiStationary.SinglePhase.Interfaces.PositivePin pin_p[m];
      PlugToPin_p plugToPin_p[m](each final m=m, final k={j for j in 1:m});
    equation 
      for j in 1:m loop
    /*
        Connections.branch(plug_p.reference, pin_p[j].reference);
        plug_p.reference.gamma = pin_p[j].reference.gamma;
        plug_p.pin[j].v = pin_p[j].v;
        plug_p.pin[j].i = -pin_p[j].i;
    */
        connect(plug_p, plugToPin_p[j].plug_p);
        connect(plugToPin_p[j].pin_p, pin_p[j]);
      end for;
    end PlugToPins_p;

* * * * *

[image33] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.PlugToPins_n
===========================================================================

Connect all (negative) pins

Information
-----------

::

Connects all m single phase (negative) pins of the multi phase
(negative) plug to an array of m single phase (negative) pins.

See also

PlugToPin_p, PlugToPin_n, PlugToPins_p

::

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            number of phases

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                         Name  Descri
                                                                     ption
  ------------------------------------------------------------ ----- ------
  NegativePlug                                                 plug_ 
                                                               n     

  NegativePin                                                  pin_n 
                                                               [m]   
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model PlugToPins_n "Connect all (negative) pins"
      parameter Integer m(final min=1) = 3 "number of phases";
      Interfaces.NegativePlug plug_n(final m=m);
      QuasiStationary.SinglePhase.Interfaces.NegativePin pin_n[m];
      PlugToPin_n plugToPin_n[m](each final m=m, final k={j for j in 1:m});
    equation 
      for j in 1:m loop
    /*
        Connections.branch(plug_n.reference, pin_n[j].reference);
        plug_n.reference.gamma = pin_n[j].reference.gamma;
        plug_n.pin[j].v = pin_n[j].v;
        plug_n.pin[j].i = -pin_n[j].i;
    */
        connect(plug_n, plugToPin_n[j].plug_n);
        connect(plugToPin_n[j].pin_n, pin_n[j]);
      end for;
    end PlugToPins_n;

* * * * *

[image34] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Resistor
=======================================================================

Multiphase linear resistor

Information
-----------

::

The linear resistor connects the complex voltages v with the complex
currents i by i*R = v, using m single phase Resistors.

The resistor model also has m optional conditional heat ports. A linear
temperature dependency of the resistances for enabled heat ports is also
taken into account.

See also

Resistor, Conductor, Capacitor, Inductor, Variable resistor, Variable
conductor, Variable capacitor, Variable inductor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter),
Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort (Partial
model to include conditional HeatPorts in order to describe the power
loss via a thermal network).

Parameters
----------

  --------------------------------------------------------------------------
  Type                           Name  Defau Description
                                       lt    
  ------------------------------ ----- ----- -------------------------------
  Integer                        m     3     Number of phases

  Resistance                     R_ref       Reference resistances at T_ref
                                 [m]         [Ohm]

  Temperature                    T_ref fill( Reference temperatures [K]
                                 [m]   293.1 
                                       5,    
                                       m)    

  LinearTemperatureCoefficient   alpha zeros Temperature coefficient of
                                 _ref[ (m)   resistance (R_actual = R_ref*(1
                                 m]          + alpha_ref*(heatPort.T -
                                             T_ref)) [1/K]

  Integer                        mh    m     Number of heatPorts=number of
                                             phases

  Boolean                        useHe false =true, if all HeatPorts are
                                 atPor       enabled
                                 t           

  Temperature                    T[mh] T_ref Fixed device temperatures if
                                             useHeatPort = false [K]
  --------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                        Name   Descri
                                                                     ption
  ----------------------------------------------------------- ------ ------
  PositivePlug                                                plug_p 

  NegativePlug                                                plug_n 

  HeatPort_a                                                  heatPo 
                                                              rt[mh] 
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model Resistor "Multiphase linear resistor"
      extends Interfaces.TwoPlug;
      parameter Modelica.SIunits.Resistance R_ref[m](start=fill(1,m)) 
        "Reference resistances at T_ref";
      parameter Modelica.SIunits.Temperature T_ref[m]=fill(293.15,m) 
        "Reference temperatures";
      parameter Modelica.SIunits.LinearTemperatureCoefficient alpha_ref[m]=zeros(m) 
        "Temperature coefficient of resistance (R_actual = R_ref*(1 + alpha_ref*(heatPort.T - T_ref))";
      extends Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort(final mh=m, T=T_ref);
      QuasiStationary.SinglePhase.Basic.Resistor resistor[
                                          m](
        final R_ref=R_ref,
        final T_ref=T_ref,
        final alpha_ref=alpha_ref,
        each final useHeatPort=useHeatPort,
        final T=T);
    equation 
      connect(plugToPins_p.pin_p, resistor.pin_p);
      connect(resistor.pin_n, plugToPins_n.pin_n);
      connect(resistor.heatPort, heatPort);
    end Resistor;

* * * * *

[image35] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Conductor
========================================================================

Multiphase linear conductor

Information
-----------

::

The linear resistor connects the complex currents i with the complex
voltages v by v*G = i, using m single phase Conductors.

The conductor model also has m optional conditional heat ports. A linear
temperature dependency of the conductances for enabled heat ports is
also taken into account.

See also

Conductor, Resistor, Capacitor, Inductor, Variable resistor, Variable
conductor, Variable capacitor, Variable inductor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter),
Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort (Partial
model to include conditional HeatPorts in order to describe the power
loss via a thermal network).

Parameters
----------

  --------------------------------------------------------------------------
  Type                           Name  Defau Description
                                       lt    
  ------------------------------ ----- ----- -------------------------------
  Integer                        m     3     Number of phases

  Conductance                    G_ref       Reference conductances at T_ref
                                 [m]         [S]

  Temperature                    T_ref fill( Reference temperatures [K]
                                 [m]   293.1 
                                       5,    
                                       m)    

  LinearTemperatureCoefficient   alpha zeros Temperature coefficient of
                                 _ref[ (m)   conductance (G_actual =
                                 m]          G_ref/(1 +
                                             alpha_ref*(heatPort.T - T_ref))
                                             [1/K]

  Integer                        mh    m     Number of heatPorts=number of
                                             phases

  Boolean                        useHe false =true, if all HeatPorts are
                                 atPor       enabled
                                 t           

  Temperature                    T[mh] T_ref Fixed device temperatures if
                                             useHeatPort = false [K]
  --------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                        Name   Descri
                                                                     ption
  ----------------------------------------------------------- ------ ------
  PositivePlug                                                plug_p 

  NegativePlug                                                plug_n 

  HeatPort_a                                                  heatPo 
                                                              rt[mh] 
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model Conductor "Multiphase linear conductor"
      extends Interfaces.TwoPlug;
      parameter Modelica.SIunits.Conductance G_ref[m](start=fill(1,m)) 
        "Reference conductances at T_ref";
      parameter Modelica.SIunits.Temperature T_ref[m]=fill(293.15,m) 
        "Reference temperatures";
      parameter Modelica.SIunits.LinearTemperatureCoefficient alpha_ref[m]=zeros(m) 
        "Temperature coefficient of conductance (G_actual = G_ref/(1 + alpha_ref*(heatPort.T - T_ref))";
      extends Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort(final mh=m, T=T_ref);
      QuasiStationary.SinglePhase.Basic.Conductor conductor[
                                            m](
        final G_ref=G_ref,
        final T_ref=T_ref,
        final alpha_ref=alpha_ref,
        each final useHeatPort=useHeatPort,
        final T=T);
    equation 
      connect(plugToPins_p.pin_p, conductor.pin_p);
      connect(conductor.pin_n, plugToPins_n.pin_n);
      connect(conductor.heatPort, heatPort);
    end Conductor;

* * * * *

[image36] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Capacitor
========================================================================

Multiphase linear capacitor

Information
-----------

::

The linear capacitor connects the complex currents i with the complex
voltages v by v*j*ω*C = i, using m single phase Capacitors.

See also

Capacitor, Resistor, Conductor, Inductor, Variable resistor, Variable
conductor, Variable capacitor, Variable inductor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter).

Parameters
----------

  -------------------------------------------------------------------------
  Type                                          Name  Default Description
  --------------------------------------------- ----- ------- -------------
  Integer                                       m     3       Number of
                                                              phases

  Capacitance                                   C[m]          Capacitances
                                                              [F]
  -------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  PositivePlug                                                  plug 
                                                                _p   

  NegativePlug                                                  plug 
                                                                _n   
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model Capacitor "Multiphase linear capacitor"
      extends Interfaces.TwoPlug;
      parameter Modelica.SIunits.Capacitance C[m](start=fill(1,m)) "Capacitances";
      QuasiStationary.SinglePhase.Basic.Capacitor capacitor[
                                            m](final C=C);
    equation 
      connect(plugToPins_p.pin_p, capacitor.pin_p);
      connect(capacitor.pin_n, plugToPins_n.pin_n);
    end Capacitor;

* * * * *

[image37] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Inductor
=======================================================================

Multiphase linear inductor

Information
-----------

::

The linear inductor connects the complex voltages v with the complex
currents i by i*j*ω*L = v, using m single phase Inductors.

See also

Inductor, Resistor, Conductor, Capacitor, Variable resistor, Variable
conductor, Variable capacitor, Variable inductor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter).

Parameters
----------

  -------------------------------------------------------------------------
  Type                                          Name  Default Description
  --------------------------------------------- ----- ------- -------------
  Integer                                       m     3       Number of
                                                              phases

  Inductance                                    L[m]          Inductances
                                                              [H]
  -------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  PositivePlug                                                  plug 
                                                                _p   

  NegativePlug                                                  plug 
                                                                _n   
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model Inductor "Multiphase linear inductor"
      extends Interfaces.TwoPlug;
      parameter Modelica.SIunits.Inductance L[m](start=fill(1,m)) "Inductances";
      QuasiStationary.SinglePhase.Basic.Inductor inductor[
                                          m](final L=L);
    equation 

      connect(plugToPins_p.pin_p, inductor.pin_p);
      connect(inductor.pin_n, plugToPins_n.pin_n);
    end Inductor;

* * * * *

[image38] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.VariableResistor
===============================================================================

Multiphase variable resistor

Information
-----------

::

The linear resistor connects the complex voltages v with the complex
currents i by i*R = v, using m single phase variable Resistors. The
resistances R are given as m input signals.

The resistor model also has m optional conditional heat ports. A linear
temperature dependency of the resistances for enabled heat ports is also
taken into account.

See also

VariableResistor, Resistor, Conductor, Capacitor, Inductor, Variable
conductor, Variable capacitor, Variable inductor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter),
Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort (Partial
model to include conditional HeatPorts in order to describe the power
loss via a thermal network).

Parameters
----------

  --------------------------------------------------------------------------
  Type                           Name  Defau Description
                                       lt    
  ------------------------------ ----- ----- -------------------------------
  Integer                        m     3     Number of phases

  Temperature                    T_ref fill( Reference temperatures [K]
                                 [m]   293.1 
                                       5,    
                                       m)    

  LinearTemperatureCoefficient   alpha zeros Temperature coefficient of
                                 _ref[ (m)   resistance (R_actual = R_ref*(1
                                 m]          + alpha_ref*(heatPort.T -
                                             T_ref)) [1/K]

  Integer                        mh    m     Number of heatPorts=number of
                                             phases

  Boolean                        useHe false =true, if all HeatPorts are
                                 atPor       enabled
                                 t           

  Temperature                    T[mh] T_ref Fixed device temperatures if
                                             useHeatPort = false [K]
  --------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                        Name   Descri
                                                                     ption
  ----------------------------------------------------------- ------ ------
  PositivePlug                                                plug_p 

  NegativePlug                                                plug_n 

  HeatPort_a                                                  heatPo 
                                                              rt[mh] 

  input RealInput                                             R_ref[ 
                                                              m]     
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model VariableResistor "Multiphase variable resistor"
      extends Interfaces.TwoPlug;
      parameter Modelica.SIunits.Temperature T_ref[m]=fill(293.15,m) 
        "Reference temperatures";
      parameter Modelica.SIunits.LinearTemperatureCoefficient alpha_ref[m]=zeros(m) 
        "Temperature coefficient of resistance (R_actual = R_ref*(1 + alpha_ref*(heatPort.T - T_ref))";
      extends Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort(final mh=m, T=T_ref);
      Modelica.Blocks.Interfaces.RealInput R_ref[m];
      QuasiStationary.SinglePhase.Basic.VariableResistor variableResistor[
                                                          m](
        final T_ref=T_ref,
        final alpha_ref=alpha_ref,
        each final useHeatPort=useHeatPort,
        final T=T);
    equation 

      connect(variableResistor.pin_p, plugToPins_p.pin_p);
      connect(variableResistor.pin_n, plugToPins_n.pin_n);
      connect(variableResistor.heatPort, heatPort);
      connect(R_ref, variableResistor.R_ref);
    end VariableResistor;

* * * * *

[image39] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.VariableConductor
================================================================================

Multiphase variable conductor

Information
-----------

::

The linear resistor connects the complex currents i with the complex
voltages v by v*G = i, using m single phase variable Conductors. The
conductances G are given as m input signals.

The conductor model also has m optional conditional heat ports. A linear
temperature dependency of the conductances for enabled heat ports is
also taken into account.

See also

VariableConductor, Resistor, Conductor, Capacitor, Inductor, Variable
resistor, Variable capacitor, Variable inductor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter),
Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort (Partial
model to include conditional HeatPorts in order to describe the power
loss via a thermal network).

Parameters
----------

  -------------------------------------------------------------------------
  Type                           Name  Defau Description
                                       lt    
  ------------------------------ ----- ----- ------------------------------
  Integer                        m     3     Number of phases

  Temperature                    T_ref fill( Reference temperatures [K]
                                 [m]   293.1 
                                       5,    
                                       m)    

  LinearTemperatureCoefficient   alpha zeros Temperature coefficient of
                                 _ref[ (m)   resistance (G_actual =
                                 m]          G_ref/(1 +
                                             alpha_ref*(heatPort.T -
                                             T_ref)) [1/K]

  Integer                        mh    m     Number of heatPorts=number of
                                             phases

  Boolean                        useHe false =true, if all HeatPorts are
                                 atPor       enabled
                                 t           

  Temperature                    T[mh] T_ref Fixed device temperatures if
                                             useHeatPort = false [K]
  -------------------------------------------------------------------------

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                        Name   Descri
                                                                     ption
  ----------------------------------------------------------- ------ ------
  PositivePlug                                                plug_p 

  NegativePlug                                                plug_n 

  HeatPort_a                                                  heatPo 
                                                              rt[mh] 

  input RealInput                                             G_ref[ 
                                                              m]     
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model VariableConductor "Multiphase variable conductor"
      extends Interfaces.TwoPlug;
      parameter Modelica.SIunits.Temperature T_ref[m]=fill(293.15,m) 
        "Reference temperatures";
      parameter Modelica.SIunits.LinearTemperatureCoefficient alpha_ref[m]=zeros(m) 
        "Temperature coefficient of resistance (G_actual = G_ref/(1 + alpha_ref*(heatPort.T - T_ref))";
      extends Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort(final mh=m, T=T_ref);
      Modelica.Blocks.Interfaces.RealInput G_ref[m];
      QuasiStationary.SinglePhase.Basic.VariableConductor variableResistor[
                                                           m](
        final T_ref=T_ref,
        final alpha_ref=alpha_ref,
        each final useHeatPort=useHeatPort,
        final T=T);
    equation 
      connect(variableResistor.pin_p, plugToPins_p.pin_p);
      connect(variableResistor.pin_n, plugToPins_n.pin_n);
      connect(variableResistor.heatPort, heatPort);
      connect(G_ref, variableResistor.G_ref);
    end VariableConductor;

* * * * *

[image40] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.VariableCapacitor
================================================================================

Multiphase variable capacitor

Information
-----------

::

The linear capacitor connects the complex currents i with the complex
voltages v by v*j*ω*C = i, using m single phase variable Capacitors. The
capacitances C are given as m input signals.

See also

VariableCapacitor, Resistor, Conductor, Capacitor, Inductor, Variable
resistor, Variable conductor, Variable inductor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter).

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            Number of phases

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  PositivePlug                                                  plug 
                                                                _p   

  NegativePlug                                                  plug 
                                                                _n   

  input RealInput                                               C[m] 
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model VariableCapacitor "Multiphase variable capacitor"
      extends Interfaces.TwoPlug;
      Modelica.Blocks.Interfaces.RealInput C[m];
      QuasiStationary.SinglePhase.Basic.VariableCapacitor variableCapacitor[
                                                            m];
    equation 
      connect(variableCapacitor.pin_p, plugToPins_p.pin_p);
      connect(variableCapacitor.pin_n, plugToPins_n.pin_n);
      connect(C, variableCapacitor.C);
    end VariableCapacitor;

* * * * *

[image41] Modelica.Electrical.QuasiStationary.MultiPhase.Basic.VariableInductor
===============================================================================

Multiphase variable inductor

Information
-----------

::

The linear inductor connects the complex voltages v with the complex
currents i by i*j*ω*L = v, using m single phase variable Inductors. The
inductances L are given as m input signals.

See also

Inductor, Resistor, Conductor, Capacitor, Inductor, Variable resistor,
Variable conductor, Variable capacitor

::

Extends from Interfaces.TwoPlug (Two plugs with pin-adapter).

Parameters
----------

  Type         Name      Default      Description
  ------------ --------- ------------ ---------------------
  Integer      m         3            Number of phases

Connectors
----------

  -------------------------------------------------------------------------
  Type                                                          Name Descri
                                                                     ption
  ------------------------------------------------------------- ---- ------
  PositivePlug                                                  plug 
                                                                _p   

  NegativePlug                                                  plug 
                                                                _n   

  input RealInput                                               L[m] 
  -------------------------------------------------------------------------

Modelica definition
-------------------

    model VariableInductor "Multiphase variable inductor"
      extends Interfaces.TwoPlug;
      Modelica.Blocks.Interfaces.RealInput L[m];
      QuasiStationary.SinglePhase.Basic.VariableInductor variableInductor[
                                                          m];
    equation 
      connect(variableInductor.pin_p, plugToPins_p.pin_p);
      connect(variableInductor.pin_n, plugToPins_n.pin_n);
      connect(variableInductor.L, L);
    end VariableInductor;

* * * * *

Automatically generated Fri Nov 12 16:29:41 2010.
